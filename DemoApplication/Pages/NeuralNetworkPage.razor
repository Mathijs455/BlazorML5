@page "/neuralnet"
@using ML5
@inject IJSInProcessRuntime Runtime
@inject HttpClient Http

        <div class="container">
            <!--Section: Content-->
            <section class="p-5 my-md-0">
                <div class="row">
                    <div class="col-md-12 mx-0">
                        <!-- Material form login -->
                        <div class="card text-white" style="background-color: #141b29">
                            <h3 class="card-header text-success" style="font-weight:bold">Neural Network </h3>
                            <!--Card content-->
                            <div class="card-body">

                                <h6 class="card-title" style="font-weight:bold">Titanic Dataset Example </h6>
                                <br />
                                <div>
                                    @if (trained)
                                    {
                                        <center>
                                            <div class="card" style="">
                                                <ul class="list-group list-group-flush">
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        Gender
                                                        <select class="form-control bg-dark" @bind="gender">
                                                            <option value="male" selected>male</option>
                                                            <option value="female">female</option>
                                                        </select>
                                                    </li>
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        Fare Class
                                                        <select class="form-control bg-dark" @bind="fare_class">
                                                            <option value="first" selected>first</option>
                                                            <option value="second">second</option>
                                                            <option value="third">third</option>
                                                        </select>
                                                    </li>
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        Age  (Yrs)
                                                        <form onsubmit="return false;">
                                                            <input type="number" min="01" max="100" class="form-control bg-dark" @bind-value="age">
                                                        </form>

                                                    </li>
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        Fare (0-512)
                                                        <form onsubmit="return false;">
                                                            <input type="number" min="0" max="512" class="form-control bg-dark" @bind-value="fare">
                                                        </form>
                                                    </li>
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        <button class="btn btn-primary" type="submit" @onclick="classify">Predict</button>
                                                    </li>
                                                    <li class="list-group-item" style="background-color: #050317">
                                                        @if (Result != null)
                                                        {
                                                            <div class="alert alert-@(Result.IndexOf("died") >= 0 ? "danger" : "primary")" role="alert">
                                                                Prediction: @Result
                                                            </div>
                                                        }
                                                    </li>
                                                </ul>
                                            </div>

                                        </center>
                                    }
                                    else
                                    {
                                        <button class="btn btn-danger" type="button" disabled>
                                            <span class="spinner-border spinner-border-sm"
                                                  role="status"
                                                  aria-hidden="true"></span>
                                            Fetching Dataset
                                        </button>
                                        <br />
                                        <br />
                                    }
                                </div>




                            </div>
                            <div class="card-footer text-white">
                                @if (dataset != null)
                                {
                                    <p style="font-size:medium">Training DataSet Size : @dataset.Length</p>
                                    <p style="font-size:medium">Dataset is bit small, train for longer time</p>
                                }
                            </div>

                        </div>
                        <!-- Material form login -->
                    </div>
                </div>

            </section>
            <!--Section: Content-->


        </div>




    @code {

        bool trained = false;
        string Result;
        NeuralNetwork network;
        Data[] dataset;
        int age = 10, fare = 1000;
        string fare_class, gender;

        protected override Task OnInitializedAsync()
        {
            fare_class = "first"; gender = "male";
            NeuralNetworkOptions option = new NeuralNetworkOptions()
            {
                inputs = 4,
                outputs = 1,
                task = NetworkTask.classification,
                debug = true
            };
            network = new NeuralNetwork(Runtime, option);
            network.OnClassification += OnClassify;
            network.OnTrainingComplete += OnTrained;
            Loaddata();
            return base.OnInitializedAsync();
        }

        void classify()
        {
            network.Classify(new object[] { age, fare, fare_class, gender });
        }

        async void Loaddata()
        {
            dataset = await Http.GetFromJsonAsync<Data[]>("data/titanic.json");
            foreach (var data in dataset)
            {
                network.AddData(new object[] { data.age, data.fare, data.fare_class, data.sex }, new object[] { data.survived });
            }
            network.NormalizeData();

            Console.WriteLine("Added Dataset of size : " + dataset.Length);

            StartTrain();
        }
        void OnTrained()
        {
            trained = true;
            StateHasChanged();
        }

        void StartTrain()
        {
            TrainingOptions options = new TrainingOptions()
            {
                epochs = 10,
                batchSize = 32
            };
            network.Train(options);
        }


        void OnClassify(string error, CResult[] results)
        {
            Result = results[0].label;
            StateHasChanged();
        }

        class Data
        {
            public string survived { get; set; }
            public string fare_class { get; set; }
            public string sex { get; set; }
            public int age { get; set; }
            public int fare { get; set; }
        }
    }
